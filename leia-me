# Requisitos para rodar o projeto Streamlit - Previsão de Pizza 🍕

## 1. Instale o Python
- Baixe e instale o Python 3.10+ (idealmente o mais recente, como o 3.13).
- Site: https://www.python.org/downloads/
- Marque a opção “Add Python to PATH” durante a instalação.

---

## 2. Instale o Poetry (gerenciador de ambiente)
Abra o terminal e digite:

(Windows PowerShell ou CMD)
> pip install poetry

Depois, navegue até o diretório do projeto:

> cd caminho/para/seu/projeto

Crie e configure o projeto:

> poetry init

Instale as bibliotecas necessárias:

> poetry add pandas scikit-learn streamlit matplotlib

---

## 3. Estrutura básica do projeto
Crie um arquivo chamado `app.py` com o seguinte conteúdo:

import streamlit as st
import pandas as pd
from sklearn.linear_model import LinearRegression

# Leitura dos dados
df = pd.read_csv("pizzas.csv")

# Treinamento do modelo
modelo = LinearRegression()
x = df[["diametro"]]
y = df[["preco"]]
modelo.fit(x, y)

# Interface
st.title("Prevendo o valor de uma pizza")
st.divider()

diametro = st.number_input("Digite o tamanho do diâmetro da pizza:")

if diametro:
    preco_previsto = modelo.predict([[diametro]])[0][0]
    st.write(f"O valor da pizza com diâmetro de {diametro:.2f} é de R$ {preco_previsto:.2f}.")
    st.balloons()

---

## 4. Execute o projeto com Streamlit
No terminal:

> poetry shell
> streamlit run app.py

A aplicação será aberta automaticamente no navegador.

---

## 5. Arquivo de dados necessário
Crie um arquivo chamado `pizzas.csv` com o seguinte conteúdo de exemplo:

diametro,preco
30,30
32,35
34,37
36,40
38,42

---

## 6. Observações
- O ambiente virtual do Poetry criará uma pasta `.venv`
- Recomenda-se adicionar `.venv` ao `.gitignore` se for subir para o GitHub

---

## 7. Bibliotecas utilizadas
- pandas
- scikit-learn
- streamlit
- matplotlib (caso você queira plotar gráficos futuramente)

---

## 8. Para exportar dependências (opcional)
> poetry export -f requirements.txt --output requirements.txt

---

✔️ Pronto! Agora seu projeto está configurado para rodar localmente e pode ser publicado no GitHub ou no Streamlit Cloud.
